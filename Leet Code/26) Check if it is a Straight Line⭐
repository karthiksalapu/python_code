class Solution(object):
    def checkStraightLine(self, coordinates):
        """
        :type coordinates: List[List[int]]
        :rtype: bool
        """
        if len(coordinates) <= 2:
            return True
        
        x0, y0 = coordinates[0]
        x1, y1 = coordinates[1]
        
        
        if x1 - x0 == 0:
            for i in range(2, len(coordinates)):
                if coordinates[i][0] != x0:
                    return False
            return True

        # slope = float(y1 - y0) / (x1 - x0)

        for i in range(2, len(coordinates)):
            xi, yi = coordinates[i]
            if xi - x0 == 0:
                return False
            if (yi - y0) * (x1 - x0) != (y1 - y0) * (xi - x0):
                return False

        return True


#=========================================================================
#Question

# 1232. Check If It Is a Straight Line

# You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.

# Example 1:
#https://assets.leetcode.com/uploads/2019/10/15/untitled-diagram-2.jpg
# Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]
# Output: true

# Example 2:
#https://assets.leetcode.com/uploads/2019/10/09/untitled-diagram-1.jpg
# Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
# Output: false

# Example 3:
# Input: coordinates = [[0,0],[0,1],[0,-1]]
# Output: true
 

# Constraints:

# 2 <= coordinates.length <= 1000
# coordinates[i].length == 2
# -10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4
# coordinates contains no duplicate point.
